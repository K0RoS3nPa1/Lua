local CoreGui = game:GetService("CoreGui")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Blur Effekt hinzufügen
local blur = Instance.new("BlurEffect")
blur.Size = 15
blur.Name = "LoadingScreenBlur"
blur.Parent = Lighting

-- GUI erstellen
local gui = Instance.new("ScreenGui")
gui.IgnoreGuiInset = true
gui.Name = "ModernLoadingScreen"
gui.Parent = CoreGui
gui.ResetOnSpawn = false

-- Schatten-Frame (etwas größer, dunkel, hinter mainFrame)
local shadowFrame = Instance.new("Frame")
shadowFrame.Size = UDim2.new(0, 440, 0, 140)
shadowFrame.Position = UDim2.new(0.5, -220, 0.5, -70)
shadowFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
shadowFrame.BorderSizePixel = 0
shadowFrame.BackgroundTransparency = 0.7
shadowFrame.AnchorPoint = Vector2.new(0, 0)
shadowFrame.Parent = gui
local shadowCorner = Instance.new("UICorner")
shadowCorner.CornerRadius = UDim.new(0, 25)
shadowCorner.Parent = shadowFrame

-- Haupt-Container
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 420, 0, 120)
mainFrame.Position = UDim2.new(0.5, -210, 0.5, -60)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BackgroundTransparency = 0.3
mainFrame.BorderSizePixel = 0
mainFrame.AnchorPoint = Vector2.new(0, 0)
mainFrame.Parent = gui
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 20)
uiCorner.Parent = mainFrame

-- Bild (links)
local image = Instance.new("ImageLabel")
image.Size = UDim2.new(0, 80, 0, 80)
image.Position = UDim2.new(0, 20, 0.5, -40)
image.BackgroundTransparency = 1
image.Image = "rbxthumb://type=Asset&id=6673968185&w=150&h=150"
image.Parent = mainFrame
local imageCorner = Instance.new("UICorner")
imageCorner.CornerRadius = UDim.new(0, 15)
imageCorner.Parent = image

-- Haupttext: "Script wird geladen..."
local loadingText = Instance.new("TextLabel")
loadingText.Size = UDim2.new(1, -130, 0.5, 0)
loadingText.Position = UDim2.new(0, 120, 0, 10)
loadingText.BackgroundTransparency = 1
loadingText.Text = "Script wird geladen..."
loadingText.TextColor3 = Color3.new(1, 1, 1)
loadingText.Font = Enum.Font.GothamBold
loadingText.TextSize = 20
loadingText.TextXAlignment = Enum.TextXAlignment.Left
loadingText.Parent = mainFrame

-- Zusatztext: "Erstellt von Nexus – v1.3"
local infoText = Instance.new("TextLabel")
infoText.Size = UDim2.new(1, -130, 0.5, 0)
infoText.Position = UDim2.new(0, 120, 0.5, 0)
infoText.BackgroundTransparency = 1
infoText.Text = "Erstellt von Nexus – v1.3"
infoText.TextColor3 = Color3.fromRGB(180, 180, 180)
infoText.Font = Enum.Font.Gotham
infoText.TextSize = 16
infoText.TextXAlignment = Enum.TextXAlignment.Left
infoText.Parent = mainFrame

-- Progress Bar Hintergrund (schmaler)
local progressBarBg = Instance.new("Frame")
progressBarBg.Size = UDim2.new(0, 280, 0, 8)
progressBarBg.Position = UDim2.new(0, 120, 1, -10)
progressBarBg.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
progressBarBg.BorderSizePixel = 0
progressBarBg.AnchorPoint = Vector2.new(0, 1)
progressBarBg.Parent = mainFrame
local progressBarBgCorner = Instance.new("UICorner")
progressBarBgCorner.CornerRadius = UDim.new(0, 5)
progressBarBgCorner.Parent = progressBarBg

-- Progress Bar Füllung
local progressBarFill = Instance.new("Frame")
progressBarFill.Size = UDim2.new(0, 0, 1, 0)
progressBarFill.Position = UDim2.new(0, 0, 0, 0)
progressBarFill.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
progressBarFill.BorderSizePixel = 0
progressBarFill.Parent = progressBarBg
local progressBarFillCorner = Instance.new("UICorner")
progressBarFillCorner.CornerRadius = UDim.new(0, 5)
progressBarFillCorner.Parent = progressBarFill

-- Shine Effekt über dem Text
local shine = Instance.new("Frame")
shine.Size = UDim2.new(0, 60, 1, 0)
shine.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
shine.BackgroundTransparency = 0.7
shine.Rotation = 25
shine.Position = UDim2.new(-0.3, 0, 0, 0)
shine.AnchorPoint = Vector2.new(0, 0)
shine.Parent = loadingText
local shineGradient = Instance.new("UIGradient")
shineGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.new(1,1,1)),
    ColorSequenceKeypoint.new(0.5, Color3.new(1,1,1,0)),
    ColorSequenceKeypoint.new(1, Color3.new(1,1,1))
}
shineGradient.Rotation = 90
shineGradient.Parent = shine

-- Partikel-Emitter (Punkte)
local particleContainer = Instance.new("Frame")
particleContainer.Size = UDim2.new(0, 420, 0, 120)
particleContainer.Position = UDim2.new(0, 0, 0, 0)
particleContainer.BackgroundTransparency = 1
particleContainer.Parent = mainFrame

local function createParticle()
    local p = Instance.new("Frame")
    p.Size = UDim2.new(0, 6, 0, 6)
    p.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
    p.BorderSizePixel = 0
    p.AnchorPoint = Vector2.new(0.5, 0.5)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = p
    p.Position = UDim2.new(math.random(), 0, 1, 0)
    p.Parent = particleContainer

    local tweenUp = TweenService:Create(p, TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(p.Position.X.Scale, 0, 0, -20), BackgroundTransparency = 1})
    tweenUp:Play()
    tweenUp.Completed:Connect(function()
        p:Destroy()
    end)
end

-- Lade-Sound (einfacher Ton)
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://1843523027" -- einfacher Klick/Tick Sound
sound.Volume = 0.5
sound.Parent = gui
sound:Play()

-- Smooth Fade-In Funktion
local function fadeIn(frame, time)
    frame.BackgroundTransparency = 1
    local tween = TweenService:Create(frame, TweenInfo.new(time), {BackgroundTransparency = 0.3})
    tween:Play()
    tween.Completed:Wait()
end

-- Smooth Fade-Out Funktion
local function fadeOut(frame, time)
    local tween = TweenService:Create(frame, TweenInfo.new(time), {BackgroundTransparency = 1})
    tween:Play()
    tween.Completed:Wait()
end

-- Initial Alpha und Transparenz für Fade-In aller Elemente
gui.Enabled = true
gui:GetPropertyChangedSignal("Enabled"):Wait()
mainFrame.BackgroundTransparency = 1
shadowFrame.BackgroundTransparency = 1
loadingText.TextTransparency = 1
infoText.TextTransparency = 1
image.ImageTransparency = 1
progressBarBg.BackgroundTransparency = 1
progressBarFill.BackgroundTransparency = 1
particleContainer.BackgroundTransparency = 1
shine.BackgroundTransparency = 1

-- Fade-In aller Elemente mit Tween
local tweenInInfo = TweenInfo.new(0.7, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
TweenService:Create(mainFrame, tweenInInfo, {BackgroundTransparency = 0.3}):Play()
TweenService:Create(shadowFrame, tweenInInfo, {BackgroundTransparency = 0.7}):Play()
TweenService:Create(loadingText, tweenInInfo, {TextTransparency = 0}):Play()
TweenService:Create(infoText, tweenInInfo, {TextTransparency = 0}):Play()
TweenService:Create(image, tweenInInfo, {ImageTransparency = 0}):Play()
TweenService:Create(progressBarBg, tweenInInfo, {BackgroundTransparency = 0}):Play()
TweenService:Create(progressBarFill, tweenInInfo, {BackgroundTransparency = 0}):Play()
TweenService:Create(shine, tweenInInfo, {BackgroundTransparency = 0.7}):Play()
TweenService:Create(particleContainer, tweenInInfo, {BackgroundTransparency = 0}):Play()

-- Shine Animation (loop)
local shineTweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1)
local shineTween = TweenService:Create(shine, shineTweenInfo, {Position = UDim2.new(1.3, 0, 0, 0)})
shineTween:Play()

-- Pulsieren und Skalieren von Bild und Text
local pulseTime = 0
local pulseConnection
pulseConnection = RunService.RenderStepped:Connect(function(dt)
    pulseTime = pulseTime + dt * 2
    local scale = 1 + 0.02 * math.sin(pulseTime)
    local alpha = 0.7 + 0.3 * math.sin(pulseTime)
    loadingText.TextColor3 = Color3.new(1,1,1):Lerp(Color3.fromRGB(100, 200, 255

