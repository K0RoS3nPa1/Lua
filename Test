local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")

-- --- Config ---
local IMAGE_ID = "rbxassetid://6673968185" -- Dein Bild
local CREATOR_TEXT = "Erstellt von: DeinName | Update v1.0"
local SOUND_ID = "rbxassetid://12222124" -- Beispiel Sound-ID, bitte anpassen
local PROGRESS_DURATION = 3 -- Dauer Progressbar in Sekunden

-- --- GUI Setup ---
local gui = Instance.new("ScreenGui")
gui.Name = "LoadingScreen"
gui.ResetOnSpawn = false
gui.Parent = CoreGui

-- Blur Hintergrund
local blur = Instance.new("BlurEffect")
blur.Size = 0
blur.Parent = game:GetService("Lighting")
TweenService:Create(blur, TweenInfo.new(1), {Size = 20}):Play()

-- Haupt Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 400, 0, 120)
frame.Position = UDim2.new(0.5, -200, 0.5, -60)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BackgroundTransparency = 0.15
frame.BorderSizePixel = 0
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.ClipsDescendants = true
frame.Parent = gui
frame.Name = "MainFrame"
frame.AutomaticSize = Enum.AutomaticSize.None
frame.RoundCorner = Instance.new("UICorner", frame)
frame.RoundCorner.CornerRadius = UDim.new(0, 15)

-- Container für Bild + Text horizontal
local container = Instance.new("Frame")
container.Size = UDim2.new(1, -40, 0.5, 0)
container.Position = UDim2.new(0, 20, 0, 15)
container.BackgroundTransparency = 1
container.Parent = frame

local uiListLayout = Instance.new("UIListLayout", container)
uiListLayout.FillDirection = Enum.FillDirection.Horizontal
uiListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
uiListLayout.Padding = UDim.new(0, 10)

-- Bild
local image = Instance.new("ImageLabel")
image.Size = UDim2.new(0, 80, 0, 80)
image.Image = IMAGE_ID
image.BackgroundTransparency = 1
image.Parent = container

-- Text "Script wird geladen"
local loadingText = Instance.new("TextLabel")
loadingText.Size = UDim2.new(1, 0, 1, 0)
loadingText.BackgroundTransparency = 1
loadingText.Text = "Script wird geladen"
loadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
loadingText.Font = Enum.Font.GothamBold
loadingText.TextSize = 20
loadingText.TextXAlignment = Enum.TextXAlignment.Left
loadingText.Parent = container

-- Progressbar Hintergrund
local progressBarBG = Instance.new("Frame")
progressBarBG.Size = UDim2.new(0.9, 0, 0, 10)
progressBarBG.Position = UDim2.new(0.05, 0, 0.75, 0)
progressBarBG.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
progressBarBG.BorderSizePixel = 0
progressBarBG.Parent = frame
local roundCornerBG = Instance.new("UICorner", progressBarBG)
roundCornerBG.CornerRadius = UDim.new(1, 0)

-- Progressbar Fill
local progressBarFill = Instance.new("Frame")
progressBarFill.Size = UDim2.new(0, 0, 1, 0)
progressBarFill.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
progressBarFill.BorderSizePixel = 0
progressBarFill.Parent = progressBarBG
local roundCornerFill = Instance.new("UICorner", progressBarFill)
roundCornerFill.CornerRadius = UDim.new(1, 0)

-- Text mit Ersteller/Update
local creatorText = Instance.new("TextLabel")
creatorText.Size = UDim2.new(1, -40, 0, 20)
creatorText.Position = UDim2.new(0, 20, 1, -30)
creatorText.BackgroundTransparency = 1
creatorText.Text = CREATOR_TEXT
creatorText.TextColor3 = Color3.fromRGB(180, 180, 180)
creatorText.Font = Enum.Font.Gotham
creatorText.TextSize = 14
creatorText.TextXAlignment = Enum.TextXAlignment.Center
creatorText.Parent = frame

-- Shine Effekt (kleiner heller Frame)
local shine = Instance.new("Frame")
shine.Size = UDim2.new(0.3, 0, 2, 0)
shine.BackgroundColor3 = Color3.new(1, 1, 1)
shine.BackgroundTransparency = 0.7
shine.Rotation = 25
shine.Position = UDim2.new(-0.3, 0, -0.5, 0)
shine.Parent = frame
local shineGradient = Instance.new("UIGradient", shine)
shineGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255)),
}
shineGradient.Transparency = NumberSequence.new{
    NumberSequenceKeypoint.new(0, 1),
    NumberSequenceKeypoint.new(0.4, 0),
    NumberSequenceKeypoint.new(0.6, 0),
    NumberSequenceKeypoint.new(1, 1),
}

-- Sound beim Start
local sound = Instance.new("Sound", frame)
sound.SoundId = SOUND_ID
sound.Volume = 0.5
sound:Play()

-- Fade-In Funktion
local function fadeIn(element, time)
    TweenService:Create(element, TweenInfo.new(time), {BackgroundTransparency = 0, TextTransparency = 0, ImageTransparency = 0}):Play()
end

-- Fade-Out Funktion
local function fadeOut(element, time)
    TweenService:Create(element, TweenInfo.new(time), {BackgroundTransparency = 1, TextTransparency = 1, ImageTransparency = 1}):Play()
end

-- Alle GUI Elemente in einer Tabelle für Fade-Effekte
local guiElements = {frame, loadingText, image, progressBarBG, progressBarFill, creatorText, shine}

-- Anfangs alle Elemente verstecken (außer Blur)
for _, element in pairs(guiElements) do
    if element:IsA("TextLabel") or element:IsA("TextButton") then
        element.TextTransparency = 1
    elseif element:IsA("ImageLabel") then
        element.ImageTransparency = 1
    elseif element:IsA("Frame") then
        element.BackgroundTransparency = 1
    end
end

-- Fade-In alle GUI Elemente gleichzeitig
for _, element in pairs(guiElements) do
    fadeIn(element, 0.8)
end

-- Shine Animation (Endlos)
local shineTweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1)
local shineTween = TweenService:Create(shine, shineTweenInfo, {Position = UDim2.new(1.3, 0, -0.5, 0)})
shineTween:Play()

-- Pulsieren + Skalieren Animation
local pulseTime = 0
local pulseConnection
pulseConnection = RunService.RenderStepped:Connect(function(dt)
    pulseTime = pulseTime + dt * 3
    local scale = 1 + 0.02 * math.sin(pulseTime)
    loadingText.Size = UDim2.new(1, -130, 1, 0) * scale
    image.Size = UDim2.new(0, 80, 0, 80) * scale

    -- Leichtes Farb-Pulsieren beim Text
    local colorShift = 0.6 + 0.4 * (0.5 + 0.5 * math.sin(pulseTime))
    loadingText.TextColor3 = Color3.new(colorShift, colorShift, colorShift)
end)

-- Partikel erstellen (Limitierung)
local lastParticleTime = 0
local function createParticle()
    local particle = Instance.new("Frame")
    particle.Size = UDim2.new(0, 6, 0, 6)
    particle.Position = UDim2.new(0.1 + math.random() * 0.8, 0, 0.8, 0)
    particle.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
    particle.BackgroundTransparency = 0.4
    particle.AnchorPoint = Vector2.new(0.5, 0.5)
    particle.Parent = frame
    local corner = Instance.new("UICorner", particle)
    corner.CornerRadius = UDim.new(1, 0)

    local tweenUp = TweenService:Create(particle, TweenInfo.new(1.5), {Position = particle.Position - UDim2.new(0, 0, 0.5, 0), BackgroundTransparency = 1})
    tweenUp:Play()
    tweenUp.Completed:Connect(function()
        particle:Destroy()
    end)
end

RunService.RenderStepped:Connect(function(dt)
    lastParticleTime = lastParticleTime + dt
    if lastParticleTime > 0.1 then
        createParticle()
        lastParticleTime = 0
    end
end)

-- Ladefortschritt mit Tween
local progressTween = TweenService:Create(progressBarFill, TweenInfo.new(PROGRESS_DURATION, Enum.EasingStyle.Quad), {Size = UDim2.new(1, 0, 1, 0)})
progressTween:Play()
progressTween.Completed:Wait()

-- Nach Ladeabschluss Fade-Out und Aufräumen
pulseConnection:Disconnect()
for _, element in pairs(guiElements) do
    fadeOut(element, 0.8)
end

TweenService:Create(blur, TweenInfo.new(0.8), {Size = 0}):Play()
wait(0.9)
blur:Destroy()
gui:Destroy()
