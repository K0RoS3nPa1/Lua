
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Pizza Hub 2.0",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Pizza Hub",
   LoadingSubtitle = "by Nick",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Pizza Hub"
   },
   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "false", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = false -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Key",
      Subtitle = "Key System",
      Note = "Discord: https://discord.gg/Z5YK4XvE" , -- Use this to tell the user how to get a key
      FileName = "KeySystemPizzaHub45", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"PizzaHub2"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local H = Window:CreateTab("Home", nil) -- Title, Image
local MainSection = H:CreateSection("Home")
local T = Window:CreateTab("Teleports", nil) -- Title, Image
local MainSection = T:CreateSection("Teleports")
local P = Window:CreateTab("Player", nil) -- Title, Image
local MainSection = P:CreateSection("Player Settings")
local S = Window:CreateTab("More Fun", nil) -- Title, Image
local MainSection = S:CreateSection("Op Scripts")
local M = Window:CreateTab("Misc", nil) -- Title, Image
local MainSection = M:CreateSection("More Content")
Rayfield:Notify({

   Title = "Executed Succesfully",
   Content = "Daily work on it",
   Duration = 2,5,
   Image = 109557676541299,
})

--[Home]

H:CreateButton({
   Name = "AutoFarm",
   Callback = function()
      
   end,
})

H:CreateButton({
   Name = "Noclip",
   Callback = function()
        
   end,
})

H:CreateButton({
   Name = "Fly",
   Callback = function()
        
   end,
})

H:CreateButton({
   Name = "UnAnchor Trees",
   Callback = function()
        
   end,
})

H:CreateButton({
   Name = "UnAnchor Mailboxes",
   Callback = function()
        
   end,
})

H:CreateButton({
   Name = "Bring Trees and Mailboxes",
   Callback = function()
        
   end,
})

H:CreateButton({
   Name = "Anti Afk",
   Callback = function()
   
    end,
})
            
H:CreateButton({
   Name = "Kitchen Destroyer",
   Callback = function()
        
   end,
})

H:CreateButton({
   Name = "Spam Sounds",
   Callback = function()
        
   end,
})

H:CreateButton({
   Name = "Anti-Oven Fire",
   Callback = function()
        
   end,
})

H:CreateButton({
   Name = "Anti Sit",
   Callback = function()
        
   end,
})

H:CreateButton({
   Name = "Anti-Kick",
   Callback = function()
        
   end,
})

H:CreateButton({
   Name = "Break Leaderboard",
   Callback = function()
        
   end,
})

H:CreateButton({
   Name = "Fling",
   Callback = function()
    
   end,
})

H:CreateButton({
   Name = "Tp To Player",
   Callback = function()
        
   end,
})

---[Teleports]

T:CreateButton({
   Name = "Tp to Cashier",
   Callback = function()
      local teleportPosition1 = Vector3.new(49, 4, 83)
      local player = game.Players.LocalPlayer
      if not player then return end -- Prüft, ob LocalPlayer existiert

      local character = player.Character or player.CharacterAdded:Wait()
      local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
      if humanoidRootPart then
         humanoidRootPart.CFrame = CFrame.new(teleportPosition1) -- Korrekte Syntax
      end
   end,
})

T:CreateButton({
   Name = "Tp to Cook",
   Callback = function()
      local teleportPosition2 = Vector3.new(38, 4, 54)
      local player = game.Players.LocalPlayer
      if not player then return end -- Prüft, ob LocalPlayer existiert

      local character = player.Character or player.CharacterAdded:Wait()
      local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
      if humanoidRootPart then
         humanoidRootPart.CFrame = CFrame.new(teleportPosition2) -- Korrekte Syntax
      end
   end,
})


T:CreateButton({
   Name = "Tp to Pizza Boxer",
   Callback = function()
      local teleportPosition3 = Vector3.new(60, 4, 13)
      local player = game.Players.LocalPlayer
      if not player then return end -- Prüft, ob LocalPlayer existiert

      local character = player.Character or player.CharacterAdded:Wait()
      local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
      if humanoidRootPart then
         humanoidRootPart.CFrame = CFrame.new(teleportPosition3) -- Korrekte Syntax
      end
   end,
})


T:CreateButton({
   Name = "Tp to Delivery",
   Callback = function()
      local teleportPosition4 = Vector3.new(65, 4, -16)
      local player = game.Players.LocalPlayer
      if not player then return end -- Prüft, ob LocalPlayer existiert

      local character = player.Character or player.CharacterAdded:Wait()
      local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
      if humanoidRootPart then
         humanoidRootPart.CFrame = CFrame.new(teleportPosition4) -- Korrekte Syntax
      end
   end,
})


T:CreateButton({
   Name = "Tp to Supplier",
   Callback = function()
      local teleportPosition5 = Vector3.new(7, 13, -1022)
      local player = game.Players.LocalPlayer
      if not player then return end -- Prüft, ob LocalPlayer existiert

      local character = player.Character or player.CharacterAdded:Wait()
      local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
      if humanoidRootPart then
         humanoidRootPart.CFrame = CFrame.new(teleportPosition5) -- Korrekte Syntax
      end
   end,
})


T:CreateButton({
   Name = "Tp to Manager Seat",
   Callback = function()
      local teleportPosition6 = Vector3.new(24, 4, 6)
      local player = game.Players.LocalPlayer
      if not player then return end -- Prüft, ob LocalPlayer existiert

      local character = player.Character or player.CharacterAdded:Wait()
      local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
      if humanoidRootPart then
         humanoidRootPart.CFrame = CFrame.new(teleportPosition6) -- Korrekte Syntax
      end
   end,
})


T:CreateButton({
   Name = "Tp to Party Island Button",
   Callback = function()
      local teleportPosition6 = Vector3.new(88, 1, -315)
      local player = game.Players.LocalPlayer
      if not player then return end -- Prüft, ob LocalPlayer existiert

      local character = player.Character or player.CharacterAdded:Wait()
      local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
      if humanoidRootPart then
         humanoidRootPart.CFrame = CFrame.new(teleportPosition6) -- Korrekte Syntax
      end
   end,
})


T:CreateDropdown({
   Name = "Teleport To Houses",
   Options = {"None","A1","A2","A3","B1","B2","B3","B4","B5","B6","C1","C2","C3"},
   CurrentOption = "None", -- Sollte ein String sein
   MultipleOptions = false,
   Flag = "Dropdown1",
   Callback = function(Option)
      local player = game.Players.LocalPlayer
      if not player then return end  -- Falls `LocalPlayer` nicht existiert, abbrechen

      local character = player.Character or player.CharacterAdded:Wait()
      local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
      if not humanoidRootPart then return end  -- Falls `HumanoidRootPart` fehlt, abbrechen
      
      if Option[1] == "None" then return end  -- Falls "None" gewählt wurde, nichts tun

      local positions = {
         A1 = CFrame.new(190, 3, -474),
         A2 = CFrame.new(188, 3, -652),
         A3 = CFrame.new(187, 3, -823),
         B1 = CFrame.new(-21, 3, -432),
         B2 = CFrame.new(24, 3, -481),
         B3 = CFrame.new(-20, 3, -612),
         B4 = CFrame.new(24, 3, -663),
         B5 = CFrame.new(-20, 3, -800),
         B6 = CFrame.new(23, 3, -836),
         C1 = CFrame.new(-184, 3, -444),
         C2 = CFrame.new(-186, 3, -612),
         C3 = CFrame.new(-185, 3, -792)
      }

      if positions[Option[1]] then
         humanoidRootPart.CFrame = positions[Option[1]]
      end
   end,
})


T:CreateDropdown({
   Name = "Teleport To Islands",
   Options = {"None", "Island 1", "Island 2", "Island 3"},
   CurrentOption = {"None"},
   MultipleOptions = false,
   Flag = "Dropdown2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Option)
      local player = game.Players.LocalPlayer
      if not player then return end -- Prüft, ob LocalPlayer existiert

      local character = player.Character or player.CharacterAdded:Wait()
      if not character then return end

      local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
      if not humanoidRootPart then return end

      -- Falls die Auswahl "None" ist, nichts tun
      if Option[1] == "None" then return end

      -- Teleportiere den Spieler basierend auf der Auswahl
      local teleportPositions = {
         ["Island 1"] = Vector3.new(1515, 0, 1373),
         ["Island 2"] = Vector3.new(-1647, 21, -1214),
         ["Island 3"] = Vector3.new(944, 1, 673),
      }

      local position = teleportPositions[Option[1]]
      if position then
         humanoidRootPart.CFrame = CFrame.new(position)
      end
   end,
})


--[Player Settings]

P:CreateSlider({
   Name = "WalkSpeed",
   Range = {8, 100},
   Increment = 2,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Speed1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

P:CreateSlider({
   Name = "JumpPower",
   Range = {0, 500},
   Increment = 5,
   Suffix = "JumpPower",
   CurrentValue = 50,
   Flag = "Jump1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
   end,
})

P:CreateButton({
 Name = "Infinite Jump",
   Callback = function()
        
   end,
})

P:CreateButton({
   Name = "Headless Head",
   Callback = function()
      
   end,
})

P:CreateButton({
   Name = "Korblox Right Leg",
   Callback = function()
      
   end,
})


--[Music]--

M:CreateButton({
   Name = "Infinite Yield",
   Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   end,
})

M:CreateButton({
   Name = "Original Pizza Hub",
   Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/dK0SQckm"))()
   end,
})

M:CreateButton({
   Name = "Eclipse Hub",
   Callback = function()
      
   end,
})

--[More Fun]

S:CreateButton({
   Name = "Tp Player To You",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Fing Supply Trucks",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Break Pizza Boxes (Pizza Boxer Area)",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Fling Supplys",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Remove Job buttons",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Remove Every Door",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Remove Party Island Button",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Buy Presents",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Buy Pet Egg",
   Callback = function()
            
end,
})

S:CreateButton({
   Name = "Buy Pet Food",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Auto Kill Pet (Mulberry Quest)",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Revive Pet (Mulberry Quest)",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Sell Items",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Auto Open Selected Present",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Auto Snowball",
   Callback = function()
      
   end,
})

S:CreateButton({
   Name = "Get Fire Extinguisher",
   Callback = function()
                
   end,
})
